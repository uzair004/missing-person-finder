extends layout

block header
	#AMP_header
		h1(style="display:table-cell;text-align: center").align-middle #{title}
	p.text-white.bg-info.text-center You can update/change person information and Status

block content
	h1 Edit Person
	.bg-light.p-4
		form(method='POST', action='/person/edit/'+person._id enctype="multipart/form-data")
			#form-group
				label Name*:
				input.form-control(name="name", type='text' value=person.Name)
			#form-group
				label Gender*:
				select.form-control(name="gender" id="gender" value=person.Gender)
					option(value="male") Male
					option(value="female") Female
					option(value="other") Other
			#form-group
				label.d-block Mental Disorder*:
				div.form-check.form-check-inline
					.form-check
						input(type="radio" value="true" name="mentalStatus").form-check-input#Check1
						label(for="Check1").form-check-label.text-secondary Yes
					.form-check
						input(type="radio" value="false" name="mentalStatus").form-check-input#Check2
						label(for="Check2").form-check-label.text-secondary No
			#form-group
				label Body Type*:
				select.form-control(name="body" id="body")
					option(value="skinny") Skinny
					option(value="normal") Normal
					option(value="fat") Fat
			#form-group
				label Age (years)*:
				input.form-control(name="age", type='number' value=person.Age)
			#form-group
				label Weight (approx Kg):
				input.form-control(name="weight", type='number' value=person.Weight)
			#form-group
				label Height (cm)*:
				input.form-control(name="height", type='number' value=person.Height)
			#form-group
				label Skin Color*:
				select.form-control(name="skinColor" id="skinColor")
					option(value="light") Light
					option(value="fair") Fair
					option(value="medium") Medium
					option(value="olive") Olive
					option(value="tan") Tan
					option(value="brown") Brown
					option(value="dark") Dark Brown
					option(value="black") Black
			#form-group
				label Eye Color*:
				select.form-control(name="eyeColor" id="eyeColor")
					option(value="amber") Amber
					option(value="blue") Blue
					option(value="brown") Brown
					option(value="gray") Gray
					option(value="green") Green
					option(value="hazel") Hazel
					option(value="red") Red and Violet
			#form-group
				label Hair Type*:
				select.form-control(name="hair" id="hair")
					option(value="straight") Straight
					option(value="wavy") Wavy
					option(value="curly") Curly
					option(value="coily") Coily
					option(value="bold") Bold
			#form-group
				label Country*:
				input.form-control(name="country", type='text' list='countries' class="search" value=person.Country)
				datalist(id="countries")
			#form-group
				label City*:
				input.form-control(name="city", type='text' value=person.City)
			#form-group
				label Current Status*:
				select.form-control(name="currentStatus" id="currentStatus")
					option(value="missing") Missing
					option(value="found") Found
			#form-group
				label Description:
				textarea.form-control(name="description")=person.Description
			.form-group
				label Image
				input#input-files.form-control-file.border(type='file', name='file', value=person.Image)
			.row
				.col-sm-12
					.preview-images
						if person.Image === null
							if person.Gender == "female"
								img(src="/mpf/missing_female.png")#Profile_Image
							else
								img(src="/mpf/missing_male.jpg")#Profile_Image
						else
							img(src=person.Image.url)#Profile_Image
			br
			input(type="text" value=person.Image name="oldFileCheck" style="display:none")

			input.btn.btn-primary(type='submit',value='Update')


	script.

		document.getElementById("gender").value ='#{person.Gender}';
		if('#{person.Gender}' === "true") {
			document.getElementById("Check1").checked = true;
		} else {
			document.getElementById("Check2").checked = true;
		}
		document.getElementById("body").value ='#{person.Body}';
		document.getElementById("skinColor").value ='#{person.SkinColor}';
		document.getElementById("eyeColor").value ='#{person.EyeColor}';
		document.getElementById("hair").value ='#{person.Hair}';
		document.getElementById("currentStatus").value ='#{person.CurrentStatus}';
		document.querySelector(".search").innerHTML = '#{person.country}'

		//- populate country drop down
		const endpoint = 'https://gist.githubusercontent.com/uzair004/a144dd0c94df2629f4d9428c0b21fdc9/raw/4d75a0a11a8969fa024ba2e9bb99c255ddc06789/countries-list-with-phone-and-flags.json';
		const countries = [];

		const searchInput = document.querySelector('.search');
		const datalist = document.getElementById('countries');

		fetch(endpoint)
			.then(blob => {
				return blob.json();
			})
			.then( data => {
				countries.push(...data)
				return;
			});

		function findMatches(wordToMatch, cities) {
			return countries.filter(country => {
				const regex = new RegExp(wordToMatch, 'gi');
				return country.value.match(regex);
			});
		}

		function displayMatches() {
			const matchArr = findMatches(this.value, countries);
			const html = matchArr.map(country => {
				const regex = new RegExp(this.value, 'gi');
				const countryName = country.value.replace(regex, `${this.value}`)

				return `<option>${countryName}</option>`;

			}).join('');
			datalist.innerHTML = html;

		}

		searchInput.addEventListener('change', displayMatches);
		searchInput.addEventListener('keyup', displayMatches);		
